<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_display</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DISPLAY.

wpn = 0;            // Arma seleccionada.
wex = 0;            // Arma anterior.
wait = 0;           // Intervalo de scroll.
meter = 0;          // Imagen del medidor.

act = false;        // Maneja colisiones.
dir = 0;            // Dirección en que cruza.

color = $983748d;   // Color.
visible = false;    // Invisible.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UBICACIÓN.

// Solapado.
if (abs(dir) &gt; 1) {x = xprevious+dir}

// Acotado.
x = clamp(x,0+80,W-80);

// Redondeado.
X = round(x);
Y = round(y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MEDIDOR.

meter = 0;
if (owner.choosing == 0.1)  {meter = 2}
if (aim.wait &gt; 0)           {meter = 1}
if (owner.stunned &gt; 21)     {meter = 1} /// ???
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// POSICIONARSE.

hspeed = (owner.x-x)/10;
act = true;
if (abs(self.dir) == 1) {dir = 0}
if (abs(self.dir) == 5) {dir = 1*sign(dir)}
x = clamp(x,0+80,W-80);
y = 45;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_display">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// COLISIÓN.

if (!act) {exit}
other.act = false;

self.dir  = 5*sign(self.dir);
other.dir = 5*sign(other.dir);

self.x   = self.xprevious;
other.x  = other.xprevious;

if ((x &lt; other.x) and (owner.x-other.owner.x &gt; +S))
    {self.dir = +5; other.dir = -5; exit}
if ((x &gt; other.x) and (owner.x-other.owner.x &lt; -S))
    {self.dir = -5; other.dir = +5; exit}

if (abs(self.dir) &gt; 1) {exit}

if (x &lt; other.x)
   {
   x = mean(x+hspeed,other.x+other.hspeed);
   self.x -= 78;
   other.x = self.x+156;
   }
else
   {
   x = mean(x+hspeed,other.x+other.hspeed);
   self.x += 78;
   other.x = self.x-156;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INVENTARIO DE ARMAS.

if (!BATTLE) {exit}

if (owner.choosing)
    {
    var i,col;
    
    // Inventario.
    draw_sprite_ext(spr_display,2,X,Y+57,1,1,0,color,1);
    
    // Indicador.
    draw_sprite(spr_select,0,X-060+(wpn*40),107+26*(wpn&gt;4));
    
    // Lista de armas.
    for (i=1; i&lt;=WPN; i++)
        {
        if (AMMO[i] == NAN)     {continue}
        if (owner.ammo[i] &gt;= 1) {col = c_bla}
        if (owner.ammo[i] == 0) {col = c_grs}
        draw_sprite_ext(weapon_spr(i),0,X-220+(i*40),108+25*(i&gt;5),1,1,0,col,1);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INFORMACIÓN.

if (!BATTLE) {exit}

var YUP,YDW;

YUP = Y-17;
YDW = Y+17;

// Estilo.
draw_set_font(ft_display);
draw_set_color(color);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

// Tiempo de espera.
draw_sprite_ext(spr_delay,0,X-72,YDW,1.45,1,0,c_neg,1);
draw_sprite_ext(spr_delay,0,X-25,YDW,aim.wait/(FPS*owner.wait),1,0,c_bla,1);

// Recuadro principal.
draw_sprite_ext(spr_display,0,X,Y,1,1,0,color,1);
draw_sprite(spr_icon,0,X-30,YUP);
draw_sprite(spr_icon,1,X+15,YUP);
draw_text(X-40,YUP,owner.hlth);
draw_text(X+35,YUP,owner.cups);

// Arma seleccionada.
draw_set_halign(fa_center);
if (owner.ammo[self.wpn] == INF)
    {draw_text(X-61,YDW,"+")}
else
    {draw_text(X-61,YDW,owner.ammo[wpn])}

// Medidor.
if (aim.last &gt; 0)
    {draw_sprite(spr_meter,3,X-12+(aim.last*75/POW),YDW)}
draw_sprite(spr_meter,meter,X-12+(aim.pow*75/POW),YDW)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
